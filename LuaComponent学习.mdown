# LuaComponent
我们公司使用的是ulua作为热更新的框架
仅是用于自身学习作用
由于这个组件的作用其实就是放在相应的prefab上面，在里面添加lua脚本的地址，让其prefab的逻辑由lua进行控制
我们公司自己在lua中构建了类似于start。update。recycle的方法
recycle实际上就是在销毁该物体的时候使用的方法
1.得到包的名字（其实就是加载的路径）（这个是静态方法所以是类直接调用，在实例初始化之前）
2.在lua的全局变量中加这个包的名字和方法。静态方法
3.调用失败的方法（由于lua是栈管理所以就是弹出）静态方法
4.调用方法（重载了n个。由于参数数量不一样，都是多了一个arg）
5.然后又有一个得到包（这个不是静态方法，只能类的实例去调用）我觉得其实就是为了保证顺序。并且一定会调用
6.创建。就是字典加了个字段
7.开始方法。（加了个队ngui的深度控制的方法）并且调用了lua的初始化方法
好像还有一个关键pooled的方法（合并）
8.awake方法（合并为false）
9.start（合并为true）
10.onrecycle（其实就是将其从字典中移除，并且调用脚本中的这个同名方法）
11.ondestroy方法（从字典中移除）
后面四个都是为了以防万一吧。
昨天找了一天bug：我觉得写的老对了。就是出现了诡异的bug。后来知道了。

在公司经验。没事多拉取。总能知道为什么出错了。因为配置改了。
